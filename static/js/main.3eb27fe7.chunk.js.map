{"version":3,"sources":["actions/actionTypes.js","actions/actionCreators.js","components/ServiceList/ServiceForm.jsx","components/ServiceList/FilterServices.jsx","components/ServiceList/Modal.jsx","components/ServiceList/ServiceList.jsx","App.jsx","constants/dataBase.js","reducers/serviceList.js","reducers/serviceForm.js","store/index.js","reducers/editModal.js","index.js"],"names":["ADD_SERVICE","REMOVE_SERVICE","EDIT_SERVICE","FILTER_SERVICES","CHANGE_SERVICE_FIELD","RESET_FORM","CHANGE_MODAL_STATE","FILL_EDIT_FORM","changeServiceField","formType","name","value","type","payload","changeModalState","isOpen","EditServiceForm","dispatch","useDispatch","onInputChange","onFormSubmit","id","price","editService","console","log","AddServiceForm","addService","ServiceForm","formData","useSelector","state","serviceForm","onSubmit","e","preventDefault","className","label","inputValue","FormInput","htmlFor","onChange","target","FilterServices","useState","setValue","string","Modal","children","onClick","ServiceList","services","map","service","i","key","ServiceItem","data","removeService","Button","App","serviceList","filtered","editModal","nanoid","initialState","filterByString","filter","toLowerCase","includes","add","edit","reducer","combineReducers","Number","serviceIndex","findIndex","newServiceList","formFields","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3eb27fe7.chunk.js","sourcesContent":["export const ADD_SERVICE = 'ADD_SERVICE';\nexport const REMOVE_SERVICE = 'REMOVE_SERVICE';\nexport const EDIT_SERVICE = 'EDIT_SERVICE';\nexport const FILTER_SERVICES = 'FILTER_SERVICES';\n\nexport const CHANGE_SERVICE_FIELD = 'CHANGE_SERVICE_FIELD';\nexport const RESET_FORM = 'RESET_FORM';\n\nexport const CHANGE_MODAL_STATE = 'CHANGE_MODAL_STATE';\nexport const FILL_EDIT_FORM = 'FILL_EDIT_FORM';\n","import {\n  ADD_SERVICE,\n  REMOVE_SERVICE,\n  EDIT_SERVICE,\n  FILTER_SERVICES,\n  CHANGE_SERVICE_FIELD,\n  RESET_FORM,\n  CHANGE_MODAL_STATE,\n  FILL_EDIT_FORM,\n} from './actionTypes';\n\nexport const addService = (name, price) => {\n  return { type: ADD_SERVICE, payload: { name, price } };\n};\n\nexport const removeService = (id) => {\n  return { type: REMOVE_SERVICE, payload: { id } };\n};\n\nexport const editService = (id, name, price) => {\n  return { type: EDIT_SERVICE, payload: { id, name, price } };\n};\n\nexport const filterServices = (string) => {\n  return { type: FILTER_SERVICES, payload: { string } };\n};\n\nexport const changeServiceField = (formType, name, value) => {\n  return { type: CHANGE_SERVICE_FIELD, payload: { name, value, formType } };\n};\n\nexport const resetForm = (formType) => {\n  return { type: RESET_FORM, payload: { formType } };\n};\n\nexport const changeModalState = (isOpen) => {\n  return { type: CHANGE_MODAL_STATE, payload: { isOpen } };\n};\n\nexport const fillEditForm = (data) => {\n  return { type: FILL_EDIT_FORM, payload: { ...data } };\n};\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  addService,\n  changeModalState,\n  changeServiceField,\n  editService,\n  resetForm,\n} from '../../actions/actionCreators';\n\nexport const EditServiceForm = () => {\n  const dispatch = useDispatch();\n\n  const onInputChange = (name, value) => {\n    dispatch(changeServiceField('edit', name, value));\n  };\n\n  const onFormSubmit = ({ id, name, price }) => {\n    if (name && price) {\n      dispatch(editService(id, name, price));\n      dispatch(changeModalState(false));\n    } else {\n      console.log('Тут должна быть какая-нибудь модалка или попап');\n    }\n  };\n\n  return (\n    <ServiceForm\n      type=\"edit\"\n      onInputChange={onInputChange}\n      onFormSubmit={onFormSubmit}\n    />\n  );\n};\n\nexport const AddServiceForm = () => {\n  const dispatch = useDispatch();\n\n  const onInputChange = (name, value) => {\n    dispatch(changeServiceField('add', name, value));\n  };\n\n  const onFormSubmit = ({ name, price }) => {\n    if (name && price) {\n      dispatch(addService(name, price));\n      dispatch(resetForm('add'));\n    } else {\n      console.log('Тут должна быть какая-нибудь модалка или попап');\n    }\n  };\n\n  return (\n    <ServiceForm\n      type=\"add\"\n      onInputChange={onInputChange}\n      onFormSubmit={onFormSubmit}\n    />\n  );\n};\n\nconst ServiceForm = ({ type, onInputChange, onFormSubmit }) => {\n  const formData = useSelector((state) => state.serviceForm[type]);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    onFormSubmit(formData);\n  };\n\n  return (\n    <form onSubmit={onSubmit} className=\"add-service_form\">\n      <FormInput\n        label=\"Name\"\n        name=\"name\"\n        inputValue={formData.name}\n        onInputChange={onInputChange}\n      />\n      <FormInput\n        label=\"Price\"\n        name=\"price\"\n        inputValue={formData.price}\n        onInputChange={onInputChange}\n      />\n      <button type=\"submit\" className=\"form_submit\">\n        Save\n      </button>\n    </form>\n  );\n};\n\nconst FormInput = ({ name, label, inputValue, onInputChange }) => {\n  const onChange = ({ target: { value } }) => {\n    onInputChange(name, value);\n  };\n\n  return (\n    <label htmlFor=\"\" className=\"form_label\">\n      <span className=\"form_label_text\">{label}</span>\n      <input\n        onChange={onChange}\n        type=\"text\"\n        className=\"form_input\"\n        value={inputValue}\n      />\n    </label>\n  );\n};\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { filterServices } from '../../actions/actionCreators';\n\nexport const FilterServices = () => {\n  const dispatch = useDispatch();\n\n  const [value, setValue] = useState('');\n\n  const onChange = ({ target: { value } }) => {\n    setValue(value);\n    dispatch(filterServices(value));\n  };\n\n  return (\n    <div className=\"filter-services\">\n      <label className=\"filter-services_label\">\n        <span className=\"filter-services_text\">Искать</span>\n        <input\n          type=\"text\"\n          className=\"filter-services_input\"\n          onChange={onChange}\n          value={value}\n        />\n      </label>\n    </div>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { changeModalState } from '../../actions/actionCreators';\n\nexport const Modal = ({ children, isOpen }) => {\n  const dispatch = useDispatch();\n\n  const onClose = () => {\n    dispatch(changeModalState(false));\n  };\n\n  return (\n    isOpen && (\n      <div className=\"modal_wrapper\">\n        <div className=\"modal\">\n          <button className=\"modal_close-btn\" onClick={onClose}>\n            ×\n          </button>\n          {children}\n        </div>\n      </div>\n    )\n  );\n};\n","import { useDispatch } from 'react-redux';\n\nimport {\n  changeModalState,\n  fillEditForm,\n  removeService,\n} from '../../actions/actionCreators';\n\nexport const ServiceList = ({ services }) => {\n  return (\n    <ul className=\"service-list\">\n      {services.map((service, i) => (\n        <ServiceItem {...service} key={i} />\n      ))}\n    </ul>\n  );\n};\n\nconst ServiceItem = ({ name, price, id }) => {\n  const dispatch = useDispatch();\n\n  const onRemove = () => {\n    dispatch(removeService(id));\n  };\n\n  const onEdit = () => {\n    dispatch(fillEditForm({ name, price, id }));\n    dispatch(changeModalState(true));\n  };\n\n  return (\n    <li className=\"service-item\">\n      <div className=\"service-item_info\">\n        <div className=\"service-item_name\">{name}</div>\n        <div className=\"service-item_price\">{price}</div>\n      </div>\n      <div className=\"service-item_controls\">\n        <Button onClick={onEdit} label=\"Edit\" />\n        <Button onClick={onRemove} label=\"Remove\" />\n      </div>\n    </li>\n  );\n};\n\nconst Button = ({ onClick, label }) => {\n  return (\n    <button onClick={onClick} className=\"service-item_btn\">\n      {label}\n    </button>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { AddServiceForm, EditServiceForm } from './components/ServiceList/ServiceForm';\nimport { FilterServices } from './components/ServiceList/FilterServices';\nimport { Modal } from './components/ServiceList/Modal';\nimport { ServiceList } from './components/ServiceList/ServiceList';\nimport './styles/app.css';\n\nexport const App = () => {\n  const { services, filtered } = useSelector((state) => state.serviceList);\n  const { isOpen } = useSelector((state) => state.editModal);\n\n  return (\n    <div className=\"services-app\">\n      <AddServiceForm />\n      <FilterServices />\n      <ServiceList services={filtered || services} />\n      <Modal isOpen={isOpen}>\n        <EditServiceForm />\n      </Modal>\n    </div>\n  );\n};\n","import { nanoid } from 'nanoid';\n\nexport const services = [\n  { id: nanoid(), name: 'Погладить котика', price: 4000 },\n  { id: nanoid(), name: 'Причесать котика', price: 6000 },\n  { id: nanoid(), name: 'Покормить котика', price: 5000 },\n  { id: nanoid(), name: 'Отремонтировать котика', price: 5500 },\n];\n","import { nanoid } from 'nanoid';\n\nimport {\n  ADD_SERVICE,\n  REMOVE_SERVICE,\n  EDIT_SERVICE,\n  FILTER_SERVICES,\n} from '../actions/actionTypes';\n\nimport { services } from '../constants/dataBase';\n\nconst initialState = {\n  services,\n  filtered: null,\n};\n\nconst filterByString = (string, services) => {\n  return services.filter((service) => service.name.toLowerCase().includes(string.toLowerCase()));\n};\n\nexport const serviceListReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ADD_SERVICE: {\n      const { name, price } = payload;\n      return {\n        ...state,\n        services: [\n          ...state.services,\n          { id: nanoid(), name, price: Number(price) },\n        ],\n      };\n    }\n    case REMOVE_SERVICE: {\n      const { id } = payload;\n      return {\n        ...state,\n        services: state.services.filter((service) => service.id !== id),\n      };\n    }\n    case EDIT_SERVICE: {\n      const { id, name, price } = payload;\n      const serviceIndex = state.services.findIndex(\n        (service) => service.id === id,\n      );\n      const newServiceList = [...state.services];\n      newServiceList[serviceIndex] = { id, name, price };\n\n      return {\n        ...state,\n        services: newServiceList,\n      };\n    }\n    case FILTER_SERVICES: {\n      const { string } = payload;\n      return { ...state, filtered: filterByString(string, services) };\n    }\n\n    default:\n      return state;\n  }\n};\n","import {\n  CHANGE_SERVICE_FIELD,\n  RESET_FORM,\n  FILL_EDIT_FORM,\n} from '../actions/actionTypes';\n\nconst initialState = {\n  add: {\n    name: '',\n    price: '',\n  },\n  edit: {\n    id: '',\n    name: '',\n    price: '',\n  },\n};\n\nexport const serviceFormReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CHANGE_SERVICE_FIELD: {\n      const { name, value, formType } = payload;\n      const formFields = state[formType];\n      return { ...state, [formType]: { ...formFields, [name]: value } };\n    }\n    case FILL_EDIT_FORM: {\n      const { id, name, price } = payload;\n      return { ...state, edit: { id, name, price } };\n    }\n    case RESET_FORM: {\n      const { formType } = payload;\n      return { ...state, [formType]: { name: '', price: '' } };\n    }\n    default:\n      return state;\n  }\n};\n","import { createStore, combineReducers } from 'redux';\n\nimport { serviceListReducer } from '../reducers/serviceList';\nimport { serviceFormReducer } from '../reducers/serviceForm';\nimport { editModalReducer } from '../reducers/editModal';\n\nconst reducer = combineReducers({\n  serviceList: serviceListReducer,\n  serviceForm: serviceFormReducer,\n  editModal: editModalReducer,\n});\n\nexport const store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n","import { CHANGE_MODAL_STATE } from '../actions/actionTypes';\n\nexport const editModalReducer = (\n  state = { isOpen: false },\n  { type, payload },\n) => {\n  switch (type) {\n    case CHANGE_MODAL_STATE: {\n      const { isOpen } = payload;\n      return { isOpen };\n    }\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { store } from './store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}